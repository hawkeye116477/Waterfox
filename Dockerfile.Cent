FROM centos:7
ENV LLVM_version="8.0"
ENV nasm_version="2.15.05"
ENV node_version="10"
ENV PATH="/opt/rh/rh-nodejs${node_version}/root/usr/bin:${PATH}"
RUN yum install -y "deltarpm" "centos-release-scl-rh" "epel-release"
RUN yum -y install "perl(Env)" "autoconf" "automake" "asciidoc" "xmlto" "gcc" "make" "xz" "wget"
RUN wget -O "/etc/yum.repos.d/hawkeye116477_bdepends.repo" "https://download.opensuse.org/repositories/home:hawkeye116477:waterfox:build-depends/CentOS_7/home:hawkeye116477:waterfox:build-depends.repo"
#
# Install Springdale SCL repo, which contains newer llvm toolchains (8, 9, 10 and 11)
# ENV SPRINGDALE_SCL="springdale-SCL-7-2.sdl7.1.noarch.rpm"
# RUN yum -y install "rpm2cpio" "bsdtar"
# RUN wget "http://springdale.princeton.edu/data/springdale/7/x86_64/os/Packages/${SPRINGDALE_SCL}"
# RUN rpm2cpio "${SPRINGDALE_SCL}" | bsdtar -xf -
# RUN rm -rf "${SPRINGDALE_SCL}"
# RUN rpm --import "http://springdale.princeton.edu/data/springdale/7/x86_64/os/RPM-GPG-KEY-springdale"
# RUN yum repolist
#
RUN yum -y update
# RUN yum -y install "llvm-toolset-${LLVM_version}-clang" "llvm-toolset-${LLVM_version}-llvm-devel"
RUN yum -y install "rh-nodejs${node_version}-nodejs"
RUN yum -y install "clang-devel" "llvm-devel"
# RUN mkdir -p "/tmp/llvm"
# RUN wget -O "/tmp/llvm/clang+llvm-7.1.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz" "https://github.com/llvm/llvm-project/releases/download/llvmorg-7.1.0/clang+llvm-7.1.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
# WORKDIR "/tmp/llvm"
# RUN tar -xf "clang+llvm-7.1.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
# RUN cp -R ./clang+llvm-7.1.0-x86_64-linux-gnu-ubuntu-14.04/* /usr/
# RUN rm -rf /tmp/llvm/*
# Fix clang package, help find it LLVM libs
# RUN scl enable llvm-toolset-${LLVM_version} 'bash'
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/lib64/*.so /usr/lib64/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/lib64/*.so.* /usr/lib64/
# RUN mkdir -p /usr/lib64/{clang,llvm,cmake}/
# RUN mkdir -p /usr/include/{clang,clang-c,llvm,llvm-c}/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/lib64/clang/ /usr/lib64/clang/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/lib64/llvm/ /usr/lib64/llvm/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/lib64/cmake/* /usr/lib64/cmake/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/include/clang/ /usr/include/clang/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/include/clang-c/ /usr/include/clang-c/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/include/llvm/ /usr/include/llvm/
# RUN ln -sf /opt/rh/llvm-toolset-${LLVM_version}/root/usr/include/llvm-c/ /usr/include/llvm-c/
RUN clang --version
#
RUN node --version
#
RUN yum -y install "ccache" "which" "pkgconfig" "python2-devel" "python36" "alsa-lib-devel" "autoconf213" "pkgconfig(gl)" "pkgconfig(dbus-glib-1)" "rust" "cargo" "libnotify-devel" "libproxy-devel" "startup-notification-devel" "unzip" "zip" "pkgconfig(xt)" "yasm" "pkgconfig(gdk-x11-2.0)" "pkgconfig(glib-2.0)" "pkgconfig(gobject-2.0)" "pkgconfig(gtk+-2.0)" "pkgconfig(gtk+-3.0)" "pkgconfig(gtk+-unix-print-2.0)" "pkgconfig(gtk+-unix-print-3.0)" "libcurl-devel" "pkgconfig(libffi)" "pkgconfig(libpulse)" "pkgconfig(jack)" "libdrm-devel" "pkgconfig(gconf-2.0)" "git" "bzip2" "libstdc++-static"
RUN cargo install cbindgen
# Build nasm
RUN mkdir -p ~/nasm/
WORKDIR "$HOME/nasm"
RUN wget "https://www.nasm.us/pub/nasm/releasebuilds/${nasm_version}/nasm-${nasm_version}.tar.xz"
RUN tar -xf nasm-${nasm_version}.tar.xz
WORKDIR "$HOME/nasm/nasm-${nasm_version}"
RUN ./configure --prefix=/usr
RUN make all
RUN make install
WORKDIR "$HOME"
RUN nasm --version
RUN rm -rf ./nasm/*
RUN mkdir -p /usr/lib/nasm-mozilla/bin
RUN ln -sf /usr/bin/nasm /usr/lib/nasm-mozilla/bin/nasm
# RUN wget -O "/usr/bin/scl_enable" "https://raw.githubusercontent.com/hawkeye116477/Waterfox/classic_ga/build/github-actions/scl_enable"
# # Enable the SCL for all bash scripts.
# ENV BASH_ENV=/usr/bin/scl_enable \
#     ENV=/usr/bin/scl_enable \
#     PROMPT_COMMAND=". /usr/bin/scl_enable"
